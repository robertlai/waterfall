// Generated by CoffeeScript 1.9.3
(function() {
  var JSFtp, Picture, api, db, express, fileLocation, fs, ftp, mongoose, pictureSchema;

  fs = require('fs');

  express = require('express');

  mongoose = require('mongoose');

  db = require('../Utilities/DB');

  JSFtp = require("jsftp");

  ftp = new JSFtp({
    host: "ftp.rcylai.ca",
    port: 21,
    user: "waterfall@rcylai.ca",
    pass: "Waterfall0pw"
  });

  api = express.Router();

  pictureSchema = new mongoose.Schema({
    fileName: String
  });

  Picture = mongoose.model('picture', pictureSchema);

  fileLocation = __dirname + '/../data/images/';

  api.post('/api', function(req, res) {
    var fileName, fileWriteStream, fullFilePath;
    fileName = (new Date()).getTime();
    fullFilePath = fileLocation + fileName + '.JPG';
    fileWriteStream = fs.createWriteStream(fullFilePath);
    fileWriteStream.on('finish', function() {
      var fileBuffer;
      fileBuffer = fs.readFileSync(fullFilePath);
      return ftp.put(fileBuffer, './data/images/' + fileName + '.JPG', function(err) {
        var picture;
        if (err) {
          throw err;
          return res.sendStatus(404);
        } else {
          console.log('File transferred successfully!');
          picture = new Picture;
          picture.fileName = fileName;
          return picture.save(function(err, picture) {
            if (err) {
              throw err;
            }
          }).then(function() {
            return res.sendStatus(200);
          });
        }
      });
    });
    return req.pipe(fileWriteStream);
  });

  api.get('/api', function(req, res) {
    var currentLastFile;
    currentLastFile = req.query.currentLastFile;
    if (!currentLastFile) {
      currentLastFile = -1;
    }
    return Picture.find({}).sort('fileName').exec(function(err, pictures) {
      var i, len, picture;
      if (err) {
        throw err;
      }
      for (i = 0, len = pictures.length; i < len; i++) {
        picture = pictures[i];
        if (+picture.fileName > +currentLastFile) {
          res.sendFile(picture.fileName + '.JPG', {
            root: fileLocation
          });
          return;
        }
      }
      return res.sendStatus(404);
    });
  });

  module.exports = api;

}).call(this);
